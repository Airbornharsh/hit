name: Build and Release

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:

jobs:
  build:
    name: Build binaries
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            goos: linux
            goarch: amd64
            ext: ""
            target: linux-amd64
          - os: ubuntu-latest
            goos: linux
            goarch: arm64
            ext: ""
            target: linux-arm64
          - os: macos-latest
            goos: darwin
            goarch: amd64
            ext: ""
            target: darwin-amd64
          - os: macos-latest
            goos: darwin
            goarch: arm64
            ext: ""
            target: darwin-arm64
          - os: windows-latest
            goos: windows
            goarch: amd64
            ext: ".exe"
            target: windows-amd64

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.25"

      - name: Get version from tag
        id: get_version
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            VERSION=${GITHUB_REF#refs/tags/}
            if [ "$VERSION" == "$GITHUB_REF" ]; then
              VERSION="dev-$(git rev-parse --short HEAD)"
            fi
          else
            VERSION=${GITHUB_REF#refs/tags/v}
          fi
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          echo "Version: $VERSION"

      - name: Build binary
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
          CGO_ENABLED: 0
        run: |
          go build -ldflags="-s -w -X main.version=${{ steps.get_version.outputs.VERSION }}" -o hit${{ matrix.ext }} ./main.go
          chmod +x hit${{ matrix.ext }}

      - name: Create archive
        shell: bash
        run: |
          if [ "${{ matrix.goos }}" == "windows" ]; then
            if command -v 7z &> /dev/null; then
              7z a hit-${{ steps.get_version.outputs.VERSION }}-${{ matrix.target }}.zip hit${{ matrix.ext }}
            else
              zip hit-${{ steps.get_version.outputs.VERSION }}-${{ matrix.target }}.zip hit${{ matrix.ext }}
            fi
          else
            tar -czf hit-${{ steps.get_version.outputs.VERSION }}-${{ matrix.target }}.tar.gz hit${{ matrix.ext }}
          fi

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: hit-${{ steps.get_version.outputs.VERSION }}-${{ matrix.target }}
          path: |
            hit-${{ steps.get_version.outputs.VERSION }}-${{ matrix.target }}.*
            hit${{ matrix.ext }}

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get version
        id: get_version
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create checksums
        shell: bash
        run: |
          cd artifacts
          find . -type f \( -name "*.zip" -o -name "*.tar.gz" \) -exec sh -c 'sha256sum "$1" > "$1.sha256"' _ {} \;

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            artifacts/**/*.tar.gz
            artifacts/**/*.zip
            artifacts/**/*.sha256
          body: |
            ## Hit ${{ steps.get_version.outputs.VERSION }}

            ### Installation

            #### macOS (Homebrew)
            ```bash
            brew tap airbornharsh/hit
            brew install hit
            ```

            #### Linux (apt)
            ```bash
            curl -fsSL https://apt.airbornharsh.dev/hit/gpg.key | sudo apt-key add -
            echo "deb https://apt.airbornharsh.dev/hit/ stable main" | sudo tee /etc/apt/sources.list.d/hit.list
            sudo apt update
            sudo apt install hit
            ```

            #### Windows (Scoop)
            ```powershell
            scoop bucket add airbornharsh https://github.com/airbornharsh/scoop-bucket
            scoop install hit
            ```

            ### Manual Installation

            Download the appropriate binary for your platform:
            - Linux AMD64: `hit-${{ steps.get_version.outputs.VERSION }}-linux-amd64.tar.gz`
            - Linux ARM64: `hit-${{ steps.get_version.outputs.VERSION }}-linux-arm64.tar.gz`
            - macOS AMD64: `hit-${{ steps.get_version.outputs.VERSION }}-darwin-amd64.tar.gz`
            - macOS ARM64: `hit-${{ steps.get_version.outputs.VERSION }}-darwin-arm64.tar.gz`
            - Windows AMD64: `hit-${{ steps.get_version.outputs.VERSION }}-windows-amd64.zip`
          draft: false
          prerelease: false
